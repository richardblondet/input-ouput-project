{"version":3,"sources":["components/Typography.tsx","components/Logo.tsx","routes/dashboard.tsx"],"names":["fontWeight","lineHeight","my","typographyStyles","H1","fontSize","as","H2","H3","H4","H5","H6","Lead","Paragraph","color","Small","display","Link","Span","to","onClick","children","props","displayName","Typography","createTextComponent","input","output","Theme","lazy","ContentPage","Dashboard","match","url","path","console","log","position","alignItems","height","margin","overflow","width","maxHeight","maxWidth","SideBarContent","fallback","exact","component"],"mappings":"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","file":"static/js/6.1675101b.chunk.js","sourcesContent":["import React from 'react';\nimport { AnchorProps, TypographyComponentProps, TypographyStyles } from \"../store/types\";\n// import { colors } from \"../themes/preset\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { TextPrimitive } from './Utils';\nimport { createTextComponent } from '../store/utils';\n\n/**\n * Typography\n * \n * ...? Typography is the art and technique of arranging type to make written \n * language legible, readable, and appealing when displayed. — Wikipedia\n * It involves font style, appearance, and structure, which aims to elicit certain \n * emotions and convey specific messages. — careerfoundry.com (2020 Guide)\n * \n * Every type of text should be define in its own component. \n * Text components:\n * H1, H2, H3, H4, H5, H6, Lead, Paragraph, Small, \n */\nconst fontWeight = 600;\nconst lineHeight = '1.2';\nconst my = 'm';\nexport const typographyStyles: TypographyStyles = {\n  H1: {\n    fontSize: 6,\n    fontWeight,\n    lineHeight,\n    my,\n    as: 'h1',\n  },\n  H2: {\n    fontSize: 5,\n    fontWeight,\n    lineHeight,\n    my,\n    as: 'h2',\n  },\n  H3: {\n    fontSize: 4,\n    fontWeight,\n    lineHeight,\n    my,\n    as: 'h3',\n  },\n  H4: {\n    fontSize: 3,\n    fontWeight,\n    lineHeight,\n    my,\n    as: 'h4',\n  },\n  H5: {\n    fontWeight,\n    fontSize: 2,\n    lineHeight,\n    my,\n    as: 'h5',\n  },\n  H6: {\n    fontWeight,\n    fontSize: 1,\n    lineHeight,\n    my,\n    as: 'h6',\n  },\n  Lead: {\n    fontSize: 2,\n    fontWeight: 300,\n    my,\n    as: 'p',\n  },\n  Paragraph: {\n    fontSize: 1,\n    fontWeight: 500,\n    lineHeight: '1.5',\n    my,\n    as: 'p',\n    color: 'tertiary'\n  },\n  Small: {\n    fontSize: 0,\n    fontWeight: 500,\n    as: 'small',\n    display: 'inline',\n    color: 'tertiary'\n  },\n  Link: {\n    fontWeight: 500,\n    fontSize: 1,\n    color: 'primary'\n  },\n  Span: {\n    fontWeight: 'inherit',\n    fontSize: 1,\n    display: 'inline',\n    as: 'span'\n  }\n};\n\n/**\n * Link\n * \n * The Anchor Link should comply with our routing\n * system in place\n * @param param0 props\n */\nconst Link: React.FC<AnchorProps> = ({ to, onClick, children, ...props }) => (\n  <RouterLink to={to} onClick={onClick}>\n    <TextPrimitive {...typographyStyles.Link} {...props}>\n      {children}\n    </TextPrimitive>\n  </RouterLink>\n);\nLink.displayName = 'Link';\n\n/**\n * Typography Component Group\n * \n * usage:\n * const { H1 } = Typography;\n */\nexport const Typography: TypographyComponentProps = {\n  H1: createTextComponent(typographyStyles.H1, 'H1'),\n  H2: createTextComponent(typographyStyles.H2, 'H2'),\n  H3: createTextComponent(typographyStyles.H3, 'H3'),\n  H4: createTextComponent(typographyStyles.H4, 'H4'),\n  H5: createTextComponent(typographyStyles.H5, 'H5'),\n  H6: createTextComponent(typographyStyles.H6, 'H6'),\n  Lead: createTextComponent(typographyStyles.Lead, 'Lead'),\n  Paragraph: createTextComponent(typographyStyles.Paragraph, 'Paragraph'),\n  Small: createTextComponent(typographyStyles.Small, 'Small'),\n  Span: createTextComponent(typographyStyles.Span, 'Span'),\n  Link: Link,\n};","import React from \"react\";\nimport { TextPrimitiveProps } from \"../store/types\";\nimport { Typography } from './Typography';\nimport { Box } from \"./Utils\";\n\nconst { H5, Span } = Typography;\n\ninterface LogoProps {\n  input?: TextPrimitiveProps;\n  output?: TextPrimitiveProps;\n}\n\nexport default (props:LogoProps) => {\n  return (\n    <Box display=\"inline-block\">\n      <H5 fontWeight={900} color=\"tertiary\">\n        <Span {...props.input}>input</Span>/<Span {...props.output}>output</Span>\n      </H5>\n    </Box>\n  ) \n}","import React, { lazy, Suspense } from 'react';\nimport { FiHome, FiEdit3, FiLayout } from 'react-icons/fi';\nimport { Route, RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { Loading } from '../components/Loaders';\nimport Logo from '../components/Logo';\nimport { Typography } from '../components/Typography';\nimport { Box, \n  Content, \n  ListItem, \n  ListItemIcon, \n  ListTitle, \n  Menu, \n  SideBar, \n  SideBarContent, \n  SideBarLogo, \n  Wrapper \n} from '../components/Utils';\n\nconst { H5, Link } = Typography;\n\n// const Overview = lazy(() => import('./dashboard.overview'));\nconst Theme = lazy(() => import('./dashboard.theme'));\nconst ContentPage = lazy(() => import('./dashboard.content'));\n\nconst Dashboard: React.FC<RouteComponentProps>  = ({ match }) => {\n  const { url, path } = match;\n  console.log('url, path', {url, path});\n  return (\n    <Wrapper>\n      <SideBar>\n        <SideBarLogo>\n          <Logo input={{ color: 'primary-tints.100' }} output={{ color: 'secondary-tints.900' }} />\n        </SideBarLogo>\n        <Box position=\"relative\" alignItems=\"flex-start\" height=\"100%!important\">\n          <Box \n            margin={0}\n            overflow=\"hidden\" \n            width=\"inherit\" \n            height=\"inherit\" \n            maxHeight=\"inherit\" \n            maxWidth=\"inherit\">\n              <Box {...SideBarContent} color=\"white\">\n                <Menu>\n                  <ListTitle>\n                    NAVIGATION\n                  </ListTitle>\n                  {/* <ListItem>\n                    <ListItemIcon>\n                      <FiHome />\n                    </ListItemIcon>\n                    <Link to={`${url}`} display=\"inline\">\n                      Dashboard\n                    </Link>\n                  </ListItem> */}\n                  <ListItem>\n                    <ListItemIcon>\n                      <FiEdit3 />\n                    </ListItemIcon>\n                    <Link to={`${url}`} display=\"inline\">\n                      Content\n                    </Link>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon>\n                      <FiLayout />\n                    </ListItemIcon>\n                    <Link to={`${url}/theme`} display=\"inline\">\n                      Theme\n                    </Link>\n                  </ListItem>\n                </Menu>\n              </Box>\n          </Box>\n        </Box>\n      </SideBar>\n      <Content key=\"Content\">\n        <Suspense fallback={<Loading />}>\n          <Route path={`${path}`} exact component={ContentPage} />\n          <Route path={`${path}/theme`} exact component={Theme} />\n          {/* <Route path={`${path}/content`} exact component={ContentPage} /> */}\n        </Suspense>\n      </Content>\n    </Wrapper>\n  );\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}