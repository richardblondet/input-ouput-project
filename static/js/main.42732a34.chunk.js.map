{"version":3,"sources":["store/actions.ts","store/states.ts","store/reducers.ts","store/providers.tsx","store/hooks.tsx","themes/preset.ts","themes/presetDark.ts","themes/chaeban.ts","themes/index.ts","components/Utils.tsx","components/Loaders.tsx","components/Errors.tsx","routes/index.tsx","App.styles.tsx","App.tsx","serviceWorker.ts","index.tsx","store/utils.tsx"],"names":["APP_INIT","getTextDomain","APP_SET_THEME","setTheme","theme","type","payload","APP_SET_OUTPUT_DATE","setOuputDate","date","APP_SET_OUTPUT_EDITOR","setOutputEditor","content","INTL_SET_LOCALE","setLocale","locale","language","getDeviceLanguage","translations","i18nTools","ApplicationState","name","getAppName","version","getAppVersion","IntlState","ApplicationReducer","createReducer","state","action","editor","IntlReducer","storeReducerFactory","ApplicationStore","ApplicationStoreProvider","IntlStore","IntlStoreProvider","useIntl","useContext","dispatch","useMemo","updateLocale","useCallback","translate","key","options","value","replace","useTheme","oldValue","selectTheme","seletedTheme","console","log","useLayoutEffect","document","body","classList","add","useContent","oldValues","setDate","setEditorValue","primary","secondary","colors","white","red","yellow","green","blue","lighten","darken","100","shade","200","300","400","500","600","700","800","900","tint","space","none","xs","s","m","l","xl","xxl","giant","fonts","headings","paragraphs","mono","serif","fontSizes","modularScale","radii","tertiary","themes","preset","presetDark","chaeban","availableThemes","Object","keys","whiteSpace","system","property","common","compose","color","display","borderType","border","shadow","text","typography","size","textStyle","TextPrimitive","styled","displayName","Box","position","layout","flex","Wrapper","SideBar","SideBarLogo","attrs","lineHeight","width","top","padding","SideBarContent","Menu","ListTitle","ListItem","props","selected","ListItemIcon","Content","Navbar","backgroundColor","zIndex","flexWrap","alignItems","justifyContent","defaultProps","DashboardNavbar","Container","mx","getWidthProperty","span","buttonVariants","sm","md","lg","variant","scale","prop","variants","bg","success","danger","warning","info","ButtonPrimitive","Button","minWidth","maxWidth","py","px","fontSize","borderRadius","Select","Loading","ErrorBoundary","Catch","error","className","message","Fragment","children","Home","lazy","About","Auth","Page404","Page403","Dashboard","Routes","fallback","exact","path","component","reset","css","GlobalStyle","createGlobalStyle","ComposedProviders","composeComponent","System","defaultContent","useEffect","themeObj","React","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","ErrorComponent","errorHandler","undefined","this","Component","wrappers","reduce","Acc","Current","reducer","initialValues","Store","createContext","useReducer","Provider","handlers","hasOwnProperty","Error","en","EN","es","ES","availableLanguages","WEEKDAYS_LONG","WEEKDAYS_SHORT","MONTHS","FIRST_DAY","formatDay","d","getDay","getDate","getMonth","getFullYear","localeUtils","formatDate","formatMonthTitle","formatWeekdayShort","weekday","formatWeekdayLong","getFirstDayOfWeek","getMonths","parseDate","str","format","Date","getTranslations","provided","split","process","slugifyMe","separator","toLocaleLowerCase","prx","createTextComponent","styleProps"],"mappings":"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","file":"static/js/main.42732a34.chunk.js","sourcesContent":["import { Json } from './types';\nimport { getTextDomain } from './utils';\n\n/**\n * Actions \n * \n * Keep them simple and use inference/optional\n * Having them all in the same file for small apps or creating\n * an action directory if needed.\n */\n// export default 'store/actions'\n\n/** ApplicationStoreReducerActions */\nexport const APP_INIT = getTextDomain('APP_INIT');\nexport const init = () => ({\n  type: APP_INIT,\n  payload: ''\n});\nexport const APP_SET_THEME = getTextDomain('APP_SET_THEME');\nexport const setTheme = (theme: string) => ({\n  type: APP_SET_THEME,\n  payload: theme\n});\nexport const APP_SET_OUTPUT_DATE = getTextDomain('APP_SET_CONTENT_DATE');\nexport const setOuputDate = (date: Date) => ({\n  type: APP_SET_OUTPUT_DATE,\n  payload: date\n});\nexport const APP_SET_OUTPUT_EDITOR = getTextDomain('APP_SET_OUTPUT_EDITOR');\nexport const setOutputEditor = (content: Json) => ({\n  type: APP_SET_OUTPUT_EDITOR,\n  payload: content\n});\n\n/** Intl ReducerActions */\nexport const INTL_SET_LOCALE = getTextDomain('INTL_SET_LOCALE');\nexport const setLocale = (locale:string) => ({\n  type: INTL_SET_LOCALE,\n  payload: locale\n});","import { ApplicationStoreState, IntlStoreState } from './types';\nimport { getAppName, getAppVersion, getDeviceLanguage, i18nTools } from './utils';\n\nconst language = getDeviceLanguage('en');\nconst { translations } = i18nTools();\n/**\n * Application Initial States\n * \n * Every state could be initialized here, always provided\n * with correct types or interfaces.\n */\n\n/** Application */\nexport const ApplicationState: ApplicationStoreState = {\n  name: getAppName(),\n  version: getAppVersion(),\n  theme: 'preset',\n  content: {\n    /** default value ? */\n    [language]: \"Hello, I'm an example content, pls make sure you edit me sometime, that'd make me happy :)\"\n  }\n};\n\n/** Intl */\nexport const IntlState: IntlStoreState = {\n  locale: language,\n  translations\n};","import { ApplicationStoreState, ApplicationStoreReducerActions, IntlStoreState, IntlStoreReducerActions, Json } from './types';\nimport { APP_INIT, APP_SET_OUTPUT_DATE, APP_SET_OUTPUT_EDITOR, APP_SET_THEME, INTL_SET_LOCALE } from './actions';\nimport { createReducer } from './utils';\nimport { ApplicationState, IntlState } from './states';\n\n/**\n * Reducers\n * \n * If using Store reducers, place them here.\n * If things grow, create a directory and separate them.\n * \n */\n\n /** Application reducer */\nexport const ApplicationReducer = createReducer<ApplicationStoreState, ApplicationStoreReducerActions>({ \n  [APP_INIT]: (state = ApplicationState):ApplicationStoreState => {\n    return {\n      ...state,\n    };\n  },\n  [APP_SET_THEME]: (state = ApplicationState, action):ApplicationStoreState => {\n    return {\n      ...state,\n      theme: (action.payload as string)\n    }\n  },\n  [APP_SET_OUTPUT_DATE]: (state = ApplicationState, action):ApplicationStoreState => {\n    return {\n      ...state,\n      content: {\n        ...state.content,\n        date: (action.payload as Date)\n      }\n    }\n  },\n  [APP_SET_OUTPUT_EDITOR]: (state = ApplicationState, action):ApplicationStoreState => {\n    return {\n      ...state,\n      content: {\n        ...state.content,\n        editor: (action.payload as Json)\n      }\n    }\n  }\n});\n\n/** Internationalization reducer */\nexport const IntlReducer = createReducer<IntlStoreState, IntlStoreReducerActions>({\n  [INTL_SET_LOCALE]: (state = IntlState, action) => {\n    return {\n      ...state,\n      locale: action.payload\n    }\n  }\n});","import { ApplicationState, IntlState } from './states';\nimport { ApplicationReducer, IntlReducer } from './reducers';\nimport { ApplicationStoreReducerActions, ApplicationStoreState, IntlStoreReducerActions, IntlStoreState } from './types';\nimport { storeReducerFactory } from './utils';\n\n/**\n * Store Providers\n * \n * A modern React application can contain (n) providers.\n * Stores can be reducers or simple contexts.\n * \n * For future reference:\n * @see {@link https://medium.com/simply/state-management-with-react-hooks-and-context-api-at-10-lines-of-code-baf6be8302c} \n */\n// export default 'store/providers';\n\n\n/** Application Provider */\nexport const [ApplicationStore, ApplicationStoreProvider] =\n  storeReducerFactory<ApplicationStoreState, ApplicationStoreReducerActions>(\n    ApplicationReducer,\n    ApplicationState\n  );\n\n/** Intl Provider */\nexport const [IntlStore, IntlStoreProvider] =\n  storeReducerFactory<IntlStoreState, IntlStoreReducerActions>(\n    IntlReducer,\n    IntlState\n  );\n\n\n\n","import { useCallback, useContext, useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport { setOuputDate, setLocale, setTheme, setOutputEditor } from './actions';\nimport { ApplicationStore, IntlStore } from './providers';\nimport { Json, TranslateFunctionOptions } from './types';\n\n/**\n * Custom Application Hooks\n * \n * Hooks let you use state and other React \n * features without writing a class.\n */\n\n/**\n * useIntl\n * \n * Intl Hook for using strings and setting locale\n */\nexport const useIntl = () => {\n  const { state, dispatch } = useContext(IntlStore);\n  const { locale, translations } = useMemo(() => state, [state]);\n\n  /** hook helper function */\n  const translate = (key: string, options?: TranslateFunctionOptions) => {\n    /** Allow us to so simple var replacement, no edge cases */\n    if (translations[locale][key]) {\n      if (options && (options.key && options.value)) {\n        return (translations[locale][key] as string).replace(options.key, options.value);\n      }\n      return translations[locale][key];\n    }\n    return key;\n  }\n\n  /** hook bridge function for action */\n  const updateLocale = useCallback((locale) => {\n    dispatch(setLocale(locale));\n  }, [dispatch]);\n\n  /** Them */\n  return {\n    locale,\n    translate,\n    updateLocale,\n    translations\n  };\n};\n\n/**\n * useTheme\n * \n * API for interacting with the Application provider\n * and managing theme\n */\nexport const useTheme = () => {\n  const { state, dispatch } = useContext(ApplicationStore);\n  const { theme:oldValue } = state;\n  \n  const theme = useMemo(() => oldValue, [oldValue]);\n  \n  /** Set the theme  */\n  const selectTheme = useCallback((seletedTheme: string) => {\n    console.log('seletedTheme', seletedTheme);\n    dispatch(setTheme(seletedTheme));\n  }, [theme]);\n  \n  /** Set the theme on body  */\n  useLayoutEffect(\n    () => {\n      if (theme) {\n        // Update css variables in document's root element\n        document.body.classList.add(`selected-theme-${theme}`);\n      }\n    }, [theme] \n  );\n\n  /** Them vars */\n  return { theme, selectTheme } as const;\n};\n\n/**\n * useContent\n * \n * For passing data around\n */\nexport const useContent = () => {\n  const { state, dispatch } = useContext(ApplicationStore);\n  const { content: oldValues } = state;\n  \n  const content = useMemo(() => oldValues, [oldValues]);\n  \n  const setDate = useCallback((date:Date) => {\n    dispatch(setOuputDate(date));\n  }, [content.date]);\n\n  const setEditorValue = useCallback((content:Json) => {\n    dispatch(setOutputEditor(content));\n  }, [content.editor])\n  \n  return { content, setDate, setEditorValue } as const;\n}","import { darken, lighten, modularScale, shade, tint } from 'polished';\nimport { FontFamily, PresetTheme, Space, ThemeColors } from '../store/types';\n// import { generatePalette } from '../store/utils';\n\n/**\n * Naming keeps getting harder\n * \n * I read Andy Barnes\n * @see {@link https://medium.com/swlh/colour-variable-names-that-scale-28663ae04052}\n * And also Tom Osborne\n * @see {@link https://www.viget.com/articles/naming-colors/}\n * about naming color variables and I share very similar point of views.\n * Because this is a theme base system, I think having a palette with custom\n * names for its colors makes the theme unique or allows it to have its own\n * personality.\n * \n * So this theme personality is inspired in palette 6\n * @see {@link https://www.happyhues.co/palettes/6}\n */\nexport const palette = {\n  blueRoyal: '#6246EA',\n  shark: '#2b2c34',\n  darkWhite: '#fffffe',\n  red: '#e96d62',\n  yellow: '#f7c377',\n  green: '#65d0a6',\n  blue: '#17a2b8',\n};\n/**\n * After defining a palette, we should then \n * decide how this colors will be apply throughout the \n * theme. But how do we know? Well...\n * \n * ...what colors should a theme have?\n * I guess it comes down to the attrs of the system/app/etc. \n * - A primary color (cta, forward thinking/actions)\n * - A lightened primary color \n * - A darkened primary color\n * - A secondary color (headlines, strongs, strokes:focus, neutral thinking)\n * - A lightened secondary color (highlights)\n * - A darkened secondary color (links)\n * - A tertiary color (paragraphs)\n * - A red color for danger and errors\n * - A yellow color for warnings\n * - A green for success\n * - A blue for information\n * - 9 black/shades colors from primary (overlays, quotes, addrs, transparents, etc)\n * - 9 white/tints colors from primary (background tones, utils)\n * - 9 black/shades colors from secondary (overlays, quotes, addrs, transparents, etc)\n * - 9 white/tints colors secondary (colors tones)\n * \n * ...I guess. So, the <ThemeColors> interface should reflect this spec.\n * \n * P.s.\n * Some of these colors can be generated based on others using\n * tools like 'polished' to darken/lighten. The 9 white and 9 black\n * colors can be generated from the primary and secondary colors using\n * shade/tint\n * \n * We can use the @react-theming/storybook-addon to preview and tweak\n * values of the theme\n */\nconst {\n  blueRoyal: primary,\n  shark: secondary,\n  darkWhite: white,\n  red,\n  yellow,\n  green,\n  blue,\n} = palette;\n\n// /** Created a type spec for the colors */\nexport const colors: ThemeColors = {\n  primary,\n  secondary,\n  white,\n  red,\n  yellow,\n  green,\n  blue,\n  'tertiary': lighten(0.25, secondary),\n  'primary-lightened': lighten(0.25, primary),\n  'primary-darkened': darken(0.25, primary),\n  'secondary-lightened': lighten(0.25, secondary),\n  'secondary-darkened': darken(0.25, secondary),\n  'primary-shades': {\n    100: shade(1*0.1, primary),\n    200: shade(2*0.1, primary),\n    300: shade(3*0.1, primary),\n    400: shade(4*0.1, primary),\n    500: shade(5*0.1, primary),\n    600: shade(6*0.1, primary),\n    700: shade(7*0.1, primary),\n    800: shade(8*0.1, primary),\n    900: shade(9*0.1, primary)\n  },\n  'primary-tints': {\n    100: tint(9*0.11, primary),\n    200: tint(8*0.11, primary),\n    300: tint(7*0.11, primary),\n    400: tint(6*0.11, primary),\n    500: tint(5*0.11, primary),\n    600: tint(4*0.11, primary),\n    700: tint(3*0.11, primary),\n    800: tint(2*0.11, primary),\n    900: tint(1*0.11, primary)\n  },\n  'secondary-shades': {\n    100: shade(1*0.05, lighten(0.15, secondary)),\n    200: shade(2*0.05, lighten(0.15, secondary)),\n    300: shade(3*0.05, lighten(0.15, secondary)),\n    400: shade(4*0.05, lighten(0.15, secondary)),\n    500: shade(5*0.05, lighten(0.15, secondary)),\n    600: shade(6*0.05, lighten(0.15, secondary)),\n    700: shade(7*0.05, lighten(0.15, secondary)),\n    800: shade(8*0.05, lighten(0.15, secondary)),\n    900: shade(9*0.05, lighten(0.15, secondary))\n  },\n  'secondary-tints': {\n    100: tint(9*0.1, secondary),\n    200: tint(8*0.1, secondary),\n    300: tint(7*0.1, secondary),\n    400: tint(6*0.1, secondary),\n    500: tint(5*0.1, secondary),\n    600: tint(4*0.1, secondary),\n    700: tint(3*0.1, secondary),\n    800: tint(2*0.1, secondary),\n    900: tint(1*0.1, secondary)\n  }\n};\n\n/** Spacing with understandable keys */\nexport const space: Space = {\n  none: 0,\n  xs: 4,\n  s: 8,\n  m: 16,\n  l: 32,\n  xl: 64,\n  xxl: 128,\n  giant: 256\n}\n\n/** this theme uses Inter free google font in both body and headings */\nexport const fonts: FontFamily = {\n  headings: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  paragraphs: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  mono: 'Source Code Pro, monospace',\n  serif: 'athelas, georgia, times, serif',\n};\n\n/** fontSizes for this theme. They are modular */\nexport const fontSizes: Array<string> = [\n  // 12, 14, 16, 20, 24, 32, 48, 64, 96\n  modularScale(-1), // 0\n  modularScale(0), // 1\n  modularScale(1), // 2\n  modularScale(2), // 3\n  modularScale(2.7), // 4\n  modularScale(3.3), // 5\n  modularScale(4) // 6\n];\n\n/** Radio value */\nexport const radii: string = '.25rem';\n\n/** Theme */\nconst theme: PresetTheme = {\n  colors,\n  space,\n  fonts,\n  fontSizes,\n  radii,\n};\n\nexport default theme;","import { darken, lighten, modularScale, shade, tint } from 'polished';\nimport { FontFamily, PresetTheme, Space, ThemeColors } from '../store/types';\n\n/**\n * Preset Dark Alt\n */\nexport const palette = {\n  blueRoyal: '#6246EA',\n  shark: '#2b2c34',\n  darkWhite: '#fffffe',\n  red: '#e96d62',\n  yellow: '#f7c377',\n  green: '#65d0a6',\n  blue: '#17a2b8',\n};\n\nconst {\n  blueRoyal: primary,\n  shark: secondary,\n  darkWhite: white,\n  red,\n  yellow,\n  green,\n  blue,\n} = palette;\n\n// /** Created a type spec for the colors */\nexport const colors: ThemeColors = {\n  primary,\n  secondary,\n  white,\n  red,\n  yellow,\n  green,\n  blue,\n  'tertiary': '#94a1b2',\n  'primary-lightened': lighten(0.25, primary),\n  'primary-darkened': darken(0.25, primary),\n  'secondary-lightened': lighten(0.25, secondary),\n  'secondary-darkened': darken(0.25, secondary),\n  'primary-shades': {\n    100: tint(1*0.1, primary),\n    200: tint(2*0.1, primary),\n    300: tint(3*0.1, primary),\n    400: tint(4*0.1, primary),\n    500: tint(5*0.1, primary),\n    600: tint(6*0.1, primary),\n    700: tint(7*0.1, primary),\n    800: tint(8*0.1, primary),\n    900: tint(9*0.1, primary)\n  },\n  'primary-tints': {\n    100: shade(9*0.09, primary),\n    200: shade(8*0.09, primary),\n    300: shade(7*0.09, primary),\n    400: shade(6*0.09, primary),\n    500: shade(5*0.09, primary),\n    600: shade(4*0.09, primary),\n    700: shade(3*0.09, primary),\n    800: shade(2*0.09, primary),\n    900: shade(1*0.09, primary),\n    // 100: tint(9*0.1, primary),\n    // 200: tint(8*0.1, primary),\n    // 300: tint(7*0.1, primary),\n    // 400: tint(6*0.1, primary),\n    // 500: tint(5*0.1, primary),\n    // 600: tint(4*0.1, primary),\n    // 700: tint(3*0.1, primary),\n    // 800: tint(2*0.1, primary),\n    // 900: tint(1*0.1, primary)\n  },\n  'secondary-shades': {\n    100: tint(1*0.05, lighten(0.15, secondary)),\n    200: tint(2*0.05, lighten(0.15, secondary)),\n    300: tint(3*0.05, lighten(0.15, secondary)),\n    400: tint(4*0.05, lighten(0.15, secondary)),\n    500: tint(5*0.05, lighten(0.15, secondary)),\n    600: tint(6*0.05, lighten(0.15, secondary)),\n    700: tint(7*0.05, lighten(0.15, secondary)),\n    800: tint(8*0.05, lighten(0.15, secondary)),\n    900: tint(9*0.05, lighten(0.15, secondary))\n  },\n  'secondary-tints': {\n    100: shade(9*0.1, secondary),\n    200: shade(8*0.1, secondary),\n    300: shade(7*0.1, secondary),\n    400: shade(6*0.1, secondary),\n    500: shade(5*0.1, secondary),\n    600: shade(4*0.1, secondary),\n    700: shade(3*0.1, secondary),\n    800: shade(2*0.1, secondary),\n    900: shade(1*0.1, secondary)\n  }\n};\n\n/** Spacing with understandable keys */\nexport const space: Space = {\n  none: 0,\n  xs: 4,\n  s: 8,\n  m: 16,\n  l: 32,\n  xl: 64,\n  xxl: 128,\n  giant: 256\n}\n\n/** this theme uses Inter free google font in both body and headings */\nexport const fonts: FontFamily = {\n  headings: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  paragraphs: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  mono: 'Source Code Pro, monospace',\n  serif: 'athelas, georgia, times, serif',\n};\n\n/** fontSizes for this theme. They are modular */\nexport const fontSizes: Array<string> = [\n  // 12, 14, 16, 20, 24, 32, 48, 64, 96\n  modularScale(-1), // 0\n  modularScale(0), // 1\n  modularScale(1), // 2\n  modularScale(2), // 3\n  modularScale(2.7), // 4\n  modularScale(3.3), // 5\n  modularScale(4) // 6\n];\n\n/** Radio value */\nexport const radii: string = '.25rem';\n\n/** Theme */\nconst theme: PresetTheme = {\n  colors,\n  space,\n  fonts,\n  fontSizes,\n  radii,\n};\n\nexport default theme;","import { darken, lighten, modularScale, shade, tint } from 'polished';\nimport { FontFamily, PresetTheme, Space, ThemeColors } from '../store/types';\n\n/**\n* Chaeban templete\n*/\nexport const palette = {\n  froly: '#f2817b',\n  smaltBlue: '#4C8D94',\n  darkWhite: '#fffffe',\n  expresso: '#572917',\n  red: '#e96d62',\n  yellow: '#f7c377',\n  green: '#65d0a6',\n  blue: '#17a2b8',\n};\n\nconst {\n  froly: primary,\n  smaltBlue: secondary,\n  darkWhite: white,\n  expresso: tertiary,\n  red,\n  yellow,\n  green,\n  blue,\n} = palette;\n\n// /** Created a type spec for the colors */\nexport const colors: ThemeColors = {\n  primary,\n  secondary,\n  white,\n  red,\n  yellow,\n  green,\n  blue,\n  tertiary,\n  'primary-lightened': lighten(0.25, primary),\n  'primary-darkened': darken(0.25, primary),\n  'secondary-lightened': lighten(0.25, secondary),\n  'secondary-darkened': darken(0.25, secondary),\n  'primary-shades': {\n    100: shade(1*0.1, primary),\n    200: shade(2*0.1, primary),\n    300: shade(3*0.1, primary),\n    400: shade(4*0.1, primary),\n    500: shade(5*0.1, primary),\n    600: shade(6*0.1, primary),\n    700: shade(7*0.1, primary),\n    800: shade(8*0.1, primary),\n    900: shade(9*0.1, primary)\n  },\n  'primary-tints': {\n    100: tint(9*0.105, secondary),\n    200: tint(8*0.105, secondary),\n    300: tint(7*0.105, secondary),\n    400: tint(6*0.105, secondary),\n    500: tint(5*0.105, secondary),\n    600: tint(4*0.105, secondary),\n    700: tint(3*0.105, secondary),\n    800: tint(2*0.105, secondary),\n    900: tint(1*0.105, secondary)\n  },\n  'secondary-shades': {\n    100: shade(1*0.05, lighten(0.15, secondary)),\n    200: shade(2*0.05, lighten(0.15, secondary)),\n    300: shade(3*0.05, lighten(0.15, secondary)),\n    400: shade(4*0.05, lighten(0.15, secondary)),\n    500: shade(5*0.05, lighten(0.15, secondary)),\n    600: shade(6*0.05, lighten(0.15, secondary)),\n    700: shade(7*0.05, lighten(0.15, secondary)),\n    800: shade(8*0.05, lighten(0.15, secondary)),\n    900: shade(9*0.05, lighten(0.15, secondary))\n  },\n  'secondary-tints': {\n    100: tint(9*0.1, secondary),\n    200: tint(8*0.1, secondary),\n    300: tint(7*0.1, secondary),\n    400: tint(6*0.1, secondary),\n    500: tint(5*0.1, secondary),\n    600: tint(4*0.1, secondary),\n    700: tint(3*0.1, secondary),\n    800: tint(2*0.1, secondary),\n    900: tint(1*0.1, secondary)\n  }\n};\n\n/** Spacing with understandable keys */\nexport const space: Space = {\n  none: 0,\n  xs: 4,\n  s: 8,\n  m: 16,\n  l: 32,\n  xl: 64,\n  xxl: 128,\n  giant: 256\n}\n\n/** this theme uses Inter free google font in both body and headings */\nexport const fonts: FontFamily = {\n  headings: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  paragraphs: 'Inter, Open-Sans, Helvetica, Arial, Sans-Serif;',\n  mono: 'Source Code Pro, monospace',\n  serif: 'athelas, georgia, times, serif',\n};\n\n/** fontSizes for this theme. They are modular */\nexport const fontSizes: Array<string> = [\n  // 12, 14, 16, 20, 24, 32, 48, 64, 96\n  modularScale(-1), // 0\n  modularScale(0), // 1\n  modularScale(1), // 2\n  modularScale(2), // 3\n  modularScale(2.7), // 4\n  modularScale(3.3), // 5\n  modularScale(4) // 6\n];\n\n/** Radio value */\nexport const radii: string = '.25rem';\n\n/** Theme */\nconst theme: PresetTheme = {\n  colors,\n  space,\n  fonts,\n  fontSizes,\n  radii,\n};\n\nexport default theme;","import preset from './preset';\nimport presetDark from './presetDark';\nimport chaeban from './chaeban';\n\nlet themes: {[index: string]: any} = {};\n\nthemes['preset'] = preset;\nthemes['preset-dark'] = presetDark;\nthemes['chaeban'] = chaeban;\n\nexport default themes;\nexport const availableThemes = Object.keys(themes);\n","import { rgba } from 'polished';\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  compose,\n  color,\n  size,\n  space,\n  textStyle,\n  typography,\n  shadow,\n  display,\n  system,\n  Config,\n  border,\n  layout,\n  flex,\n  position,\n  variant,\n} from 'styled-system';\nimport { BoxProps, ButtonPrimitiveProps, ColType, ProtectedRouteProps, TextPrimitiveProps } from '../store/types';\n\n/**\n * Private Route Handler\n * @param props ProtectedRouteProps\n * @see {@link https://stackoverflow.com/questions/47747754/how-to-rewrite-the-protected-private-route-using-typescript-and-react-router-4-a}\n */\nexport const PrivateRoute: React.FC<ProtectedRouteProps> = props => {\n  /** extract */\n  const { \n    isAuthenticated,\n    isAllowed = true,\n    unautheticatedPath = '/auth',\n    unauthorizedPath = '/403',\n    component, \n    path,\n    ...rest\n  } = props;\n  \n  /** if you are not in by any means then  */\n  if (!isAuthenticated) {\n    return <Redirect to={unautheticatedPath} />;\n  }\n  \n  /** if you are in but not allowed then  */\n  if (isAuthenticated && !isAllowed) {\n    return <Redirect to={unauthorizedPath} />;\n  }\n\n  /** it */\n  return <Route path={path} component={component} {...rest} />;\n};\n\n/**\n * A WhiteSpace prop\n */\nconst whiteSpace = system({\n  whiteSpace: {\n    property: 'whiteSpace'\n  }\n} as Config);\n\n/**\n * Common Component types\n */\nexport const common = compose(\n  space,\n  color,\n  display\n);\n\n/**\n * Border Component types\n */\nexport const borderType = compose(\n  border,\n  shadow\n);\n\n/**\n * Text Component type\n */\nexport const text = compose(\n  common,\n  typography,\n  whiteSpace,\n  shadow,\n  size,\n  textStyle\n);\n\n\n/**\n * Text Primitive\n * \n * Primitive component to create text based components from\n */\nexport const TextPrimitive = styled('div')<TextPrimitiveProps>`\n  ${text}\n`;\nTextPrimitive.displayName = 'TextPrimitive';\n\n/**\n * Box Primitive\n * \n * Primitive component to create components from\n */\nexport const Box = styled('div')<BoxProps>`\n  ${common}\n  ${position}\n  ${layout}\n  ${flex}\n`;\nBox.displayName = 'Box';\n\n/** Temp development */\nexport const Wrapper = styled('div')`\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`;\n\nexport const SideBar = styled('div')`\n  width: 260px;\n  z-index: 10;\n  background: linear-gradient(135deg,#8f75da 0,#727cf5 60%);\n  bottom: 0;\n  position: fixed;\n  transition: all .2s ease-out;\n  top: 0;\n  padding-top: 85px;\n  box-shadow: 0 0 35px 0 rgba(154,161,171,.15);\n  background: #313a46;\n`;\n\nexport const SideBarLogo = styled(Box).attrs({\n  lineHeight: '70px',\n  width: '260px',\n  position: 'fixed',\n  top: 0,\n  padding: '.5rem 0',\n})`\n  text-align: center;\n`;\n\nexport const SideBarContent: BoxProps = {\n  width: 'auto'\n};\n\nexport const Menu = styled('ul')`\n  padding: 0;\n`;\n\nexport const ListTitle = styled('li')`\n  list-style: none;\n  padding: 12px 30px;\n  letter-spacing: .05em;\n  pointer-events: none;\n  cursor: default;\n  font-size: .6875rem;\n  text-transform: uppercase;\n  color: #8391a2;\n  font-weight: 700;\n`;\n\nexport const ListItem = styled('li')<{ selected?: boolean }>`\n  display: block;\n  padding: 10px 30px;\n  font-size: .9375rem;\n  position: relative;\n  transition: all .4s;\n\n  a {\n    text-decoration: none;\n    > div {\n      color: ${(props) => props.selected ? '#fff' : '#8391a2'} !important;\n    }\n    &:hover {\n      > div {\n        color:#fff !important;\n      }\n    }\n  }\n`;\n\nexport const ListItemIcon = styled('i')`\n  display: inline-block;\n  line-height: 1.0625rem;\n  margin: 0 10px 0 0;\n  font-size: 1.1rem;\n  vertical-align: middle;\n  width: 20px;\n`;\n\nexport const Content = styled('div')`\n  margin-left: 260px;\n  overflow: hidden;\n  padding: 88px 0px 65px;\n  min-height: 100vh;\n`;\n\nexport const Navbar = styled(Box).attrs({\n  backgroundColor: 'primary-tints.100',\n  position: 'relative',\n  zIndex: 1001,\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n})``;\nNavbar.defaultProps = {\n  padding: '.9rem 1rem',\n}\n\nexport const DashboardNavbar = styled(Navbar).attrs({\n  key: \"DasboardNavbar\"\n})`\n  position: fixed;\n  top: 0;\n  background-color:#ffffff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: solid 1px #efefef;\n  z-index: 1010;\n  width: calc( 100% - 260px );\n`;\n\nexport const Container = styled(Box).attrs({\n  width: '100%',\n  mx: 'auto'\n})`\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1220px) {\n    max-width: 1140px;\n  }\n`;\n\nexport const Row = styled(Box)`\n  &::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n`;\n\nconst getWidthProperty = (span:number) => {\n  let width = span / 12 * 100;\n  return `width: ${width}%;`;\n}\nexport const Col = styled(Box)<ColType>`\n  float: left;\n  ${({ xs }) => xs ? getWidthProperty(xs) : \"width: 100%;\"}\n\n  @media only screen and (min-width: 768px) {\n    ${({ sm }) => sm && getWidthProperty(sm)}\n  }\n  @media only screen and (min-width: 992px) {\n    ${({ md }) => md && getWidthProperty(md)}\n  }\n  @media only screen and (min-width: 1220px) {\n    ${({ lg }) => lg && getWidthProperty(lg)}\n  }\n`;\n\n/** Button Variants */\nexport const buttonVariants = variant({\n  scale: 'buttons',\n  prop: 'type',\n  variants: {\n    primary: {\n      bg: 'primary',\n      color: 'secondary-tints.100'\n    },\n    secondary: {\n      bg: 'secondary',\n      color: 'secondary-tints.100'\n    },\n    success: {\n      bg: 'green',\n      color: 'secondary-tints.100'\n    },\n    danger: {\n      bg: 'red',\n      color: 'secondary-tints.100'\n    },\n    warning: {\n      bg: 'yellow',\n      color: 'secondary-tints.100'\n    },\n    info: {\n      bg: 'blue',\n      color: 'secondary-tints.100'\n    },\n  }\n});\n\n/**\n * Button Primitive\n */\nexport const ButtonPrimitive = styled('button')<ButtonPrimitiveProps>`\n  ${text}\n  ${borderType}\n  ${buttonVariants}\n`;\n/** Bare Button */\nexport const Button = styled(ButtonPrimitive).attrs({\n  position: 'relative',\n  minWidth: '250px',\n  maxWidth: '100%',\n  display: 'inline-block',\n})<ButtonPrimitiveProps>`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  max-width: 100%;\n`;\n// This allows us to override\nButton.defaultProps = {\n  py: 's',\n  px: 'm',\n  bg: 'secondary-tints.100',\n  color: 'secondary-shades.100',\n  fontSize: 1,\n  borderRadius: '.25rem'\n}\n\nexport const Select = styled('select')`\n  display: block;\n  width: 100%;\n  height: calc(1.5em + .75rem + 2px);\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  background-color: transparent;\n  background-clip: padding-box;\n  border: 0 solid #ced4da;\n  border-radius: .25rem;\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n`;","import React from 'react';\n\n/**\n * Loaders Components\n * \n * Should an app have one loading component or more?\n */\n// export default 'components/loaders';\n\nexport const Loading = (props:any) => {\n  return <div>loading...</div>;\n}\n","import React from 'react';\nimport { ErrorBoundaryProps } from '../store/types';\nimport { Catch } from '../store/utils';\n\n/**\n * Errors Components\n * \n * An app definitely more than one error components.\n */\n\n\n\n/**\n * Generic Error Boundary\n * \n * Style as desired.\n */\nexport const ErrorBoundary = Catch((props: ErrorBoundaryProps) => {\n  if (props.error) {\n    return (\n      <div className=\"error-screen\">\n      <h2>An error has occured</h2>\n      <h4>{props.error.message}</h4>\n      </div>\n    );\n  }\n    \n    return <React.Fragment>{props.children}</React.Fragment>;\n});","import React, { lazy, Suspense } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { Loading } from '../components/Loaders';\nimport { PrivateRoute } from '../components/Utils';\n\n/**\n * Routes\n * \n * Our routes represent the view part of our application.\n * Every route contains a set of components that constitutes \n * the view.\n * \n * +------------+\n * | Navigation |\n * +============+\n * |            |\n * |            |\n * |    View    | <--- Routes \n * |            |\n * |            |\n * +------------+\n */\n\nconst Home = lazy(() => import('./home'));\nconst About = lazy(() => import('./about'));\n// const Profile = lazy(() => import('./profile'));\nconst Auth = lazy(() => import('./auth'));\nconst Page404 = lazy(() => import('./404'));\nconst Page403 = lazy(() => import('./403'));\nconst Dashboard = lazy(() => import('./dashboard'));\n\n/** Routes Component */\nconst Routes = () => (\n  <BrowserRouter>\n    <Suspense fallback={<Loading />}>\n      <Switch>\n        {/* Public Routes */}\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        \n        {/* Private Routes */}\n        {/* <PrivateRoute path=\"/me\" component={Profile} isAuthenticated={true} /> */}\n\n        {/* Dashboard */}\n        <Route path=\"/dashboard\" component={Dashboard} />\n        \n        {/* \"Utility\" routes */}\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/403\" component={Page403} />\n        <Route component={Page404} />\n      </Switch>\n    </Suspense>\n  </BrowserRouter>\n);\n\nexport default Routes;","import { createGlobalStyle, css } from \"styled-components\";\n\n/** Reset our styles */\nconst reset = css`\n  /* http://meyerweb.com/eric/tools/css/reset/\n    v5.0.1 | 20191019\n    License: none (public domain)\n  */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  *, ::after, ::before {\n    box-sizing: border-box;\n  }\n`\n/** GlobalStyle */\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  body {\n    font-family: 'Inter', Open-Sans, Helvetica, Arial, Sans-Serif;\n  }\n`;\n\nexport default GlobalStyle;","import React, { useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { ErrorBoundary } from './components/Errors';\nimport Routes from './routes';\nimport { ApplicationStoreProvider, IntlStoreProvider } from './store/providers';\nimport { composeComponent } from './store/utils';\nimport GlobalStyle from './App.styles';\nimport { useContent, useIntl, useTheme } from './store/hooks';\nimport themes from './themes';\nimport { ContentInterface, Json } from './store/types';\n/**\n * Application\n * \n * Towards @version 1.0.0\n */\n\n/** \n * Compose Providers \n * \n * If your application needs another provider at Root level\n * you can add it here. You can also add providers down the\n * nest, just where you need it to.\n * */\nconst ComposedProviders = composeComponent([\n  props => <ApplicationStoreProvider {...props} />,\n  props => <IntlStoreProvider {...props} />,\n]);\n\nconst System: React.FC<React.ReactNode> = ({ children }) => {\n  const { theme } = useTheme();\n  const { content, setEditorValue } = useContent();\n  const { locale } = useIntl();\n  \n  let defaultContent: ContentInterface = {\n    ...content,\n  };\n\n  useEffect(() => {\n    defaultContent['editor'] = {\n      [locale]: \"Hello, I'm an example content, pls make sure you edit me sometime, that'd make me happy :)\"\n    };\n\n    setEditorValue((defaultContent as Json));\n  }, []);\n  \n  const themeObj = themes[theme];\n\n  return (\n    <ThemeProvider theme={themeObj}>\n      <ErrorBoundary>{children}</ErrorBoundary>\n    </ThemeProvider>\n  );\n};\n\nconst { Fragment } = React;\n\nconst App = () => {\n  return (\n    <ComposedProviders>\n      <System>\n        <Fragment>\n          <GlobalStyle />\n          <Routes />\n        </Fragment>\n      </System>\n    </ComposedProviders>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers:\n// https://github.com/facebook/create-react-app/blob/master/packages/cra-template/template/README.md\n// @deprecated https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { \n  FunctionComponent,\n  useReducer, \n  Reducer, \n  Dispatch, \n  createContext,\n  useContext,\n  ComponentType,\n  Component,\n  ErrorInfo,\n} from 'react';\nimport { shade, tint } from 'polished';\nimport { \n  Action, \n  ErrorBoundaryProps, \n  ErrorBoundaryState, \n  ErrorHandler, \n  Json, \n  Languages, \n  ProtectedRouteProps, \n  RangeColorsShape, \n  ReducersHandlers, \n  State, \n  TextPrimitiveProps\n} from './types';\nimport EN from '../i18n/en.json';\nimport ES from '../i18n/es.json';\nimport { TextPrimitive } from '../components/Utils';\nimport themes from '../themes';\nimport { LocaleUtils } from 'react-day-picker';\n\n/**\n * Utils \n * \n * This file holds utility functions.\n */\n// export default 'store/utils';\n\n\n/**\n* Error Boundary HOC\n* \n* Returns a component type to isolate errors from its child down.\n* \n* @returns {ComponentType} React Component Type  \n* @see {@link https://gist.githubusercontent.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c/raw/2d0ac6cace3bea9dc94997129c0ef20bfa8112a6/functional-error-boundary.ts}\n*/\nexport const Catch = <P extends ErrorBoundaryProps> (\n  ErrorComponent: ComponentType<P>, \n  errorHandler?: ErrorHandler\n  ): ComponentType<P> => (\n  \n  /** Returning a Class Component for this feature */\n  class ErrorBoundaryComponent extends Component<P, ErrorBoundaryState> {\n    \n    state: ErrorBoundaryState = {\n      error: undefined\n    };\n    \n    static getDerivedStateFromError(error: Error) {\n      return { error };\n    }\n    \n    componentDidCatch(error: Error, info: ErrorInfo) {\n      if (errorHandler) {\n        errorHandler(error, info);\n      }\n    }\n    \n    render() {\n      return <ErrorComponent {...this.props} error={this.state.error} />;\n    }\n  }\n);\n\n/**\n * Compose components\n * \n * Use this utility wrapper to organize components that \n * only hold 1 children.\n */\nexport const composeComponent = (wrappers: FunctionComponent[]): FunctionComponent => {\n  return wrappers.reduce((Acc, Current): FunctionComponent => {\n    return props => <Current><Acc {...props} /></Current>\n  });\n};\n\n/**\n * Store Factory\n * \n * Create contexts and provide easy access to state.\n * Good for readonly states.\n * \n * @param defaultValue Pass optional default value \n */\nexport const storeContextFactory = <A,>(defaultValue?:A) => {\n  const contxt = createContext<A | undefined>(defaultValue)\n  \n  /** Using context right away */\n  const useThisContext = () => {\n    const c = useContext(contxt)\n    \n    if (!c) throw new Error(\"useThisContext must be inside a Provider with a value\")\n    \n    return c;\n  }\n  return [useThisContext, contxt.Provider] as const\n};\n\n/**\n * Store Reducer Factory\n * \n * Create store reducers using this factory \n * with type checking in mind.\n * \n * ---\n * Usage:\n * const [simpleStore, simpleStoreProvider] =\n * storeReducerFactory<ProviderState, Action>(TheReducer, TheState);\n * \n * @param reducer \n * @param initialValues \n */\nexport const storeReducerFactory = <StateType, ActionType>(\n  reducer: Reducer<StateType, ActionType>, \n  initialValues: StateType,\n) => {\n  \n  /** Our reducers needs a dispatcher */\n  const dispatcher: Dispatch<ActionType> = (value:ActionType) => initialValues;\n  \n  /** The store context */\n  const Store = createContext({\n    state: initialValues,\n    dispatch: dispatcher\n  });\n  \n  /** Provider Component */\n  const Provider:FunctionComponent = (props) => {\n    const [state, dispatch] = useReducer<Reducer<StateType, ActionType>>(reducer, initialValues);\n    \n    return (\n      <Store.Provider value={{ state, dispatch }} {...props} />\n    );\n  };\n\n  /** Them */\n  return [Store, Provider] as const;\n};\n\n/**\n * Reducer generator\n * \n * Manage the state actions for the application store context.\n * Each provider can be managed with a reducer. Use this to create reducers.\n * \n * usage:\n * const aReducer = createReducer<State, Action>({\n *    [ACTION_ID]: ():State => {}\n * });\n */\nexport const createReducer = <T extends State, A extends Action>\n  (handlers:ReducersHandlers<T, A>) => (state:T, action:A): T => {\n  /** Observe ongoing actions */\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\n      \"%c ACTION[%s]\", \"font-weight: bold; color: #6B5ADF;\", \n      action.type.toUpperCase(), \n      \"[payload]: \",\n      action.payload \n    );\n  }\n  \n  /** There should not be any action type going on if its not defined, right? */\n  if (!handlers.hasOwnProperty(action.type)) {\n    throw new Error(); /* you better call saul */\n  }\n\n  /** Apply any middleware to all reducers here */\n  /** end of middlewares */\n  \n  /** Run */\n  return handlers[action.type](state, action);\n};\n\n/**\n * Intl Tools\n * \n * This handy tools to manage our local i18n.\n * \n */\nexport const i18nTools = () => {\n  /** Add languages heres */\n  const translations:Languages = {\n    en: EN,\n    es: ES\n  };\n\n  /** \n   * This function will be used to create `translate` function for the context \n   * @deprecated\n   */\n  const getTranslations = (locale:string) => (key:string) => \n      translations[locale][key] || key;\n\n  /** Provide avaliable languages */\n  const availableLanguages = Object.keys(translations);\n\n  /** Tools for the date picker */\n  const WEEKDAYS_LONG: any = {\n    'en': [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n    'es': [\n      'Domingo',\n      'Lunes',\n      'Martes',\n      'Miércoles',\n      'Jueves',\n      'Viernes',\n      'Sábado',\n    ],\n  };\n\n  const WEEKDAYS_SHORT: any = {\n    'en': ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    'es': ['Dom', 'Lun', 'Mar', 'Mier', 'Jue', 'Vie', 'Sab'],\n  };\n\n  const MONTHS: any = {\n    'en': [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n    'es': [\n      'Enero',\n      'Febrero',\n      'Marzo',\n      'Abril',\n      'Mayo',\n      'Junio',\n      'Julio',\n      'Agosto',\n      'Septiembre',\n      'Octubre',\n      'Noviembre',\n      'Diciembre',\n    ],\n  };\n\n  const FIRST_DAY: any = {\n    'en': 0,\n    'es': 0,\n  };\n\n  function formatDay(d: Date, locale: string = 'en') {\n    return `${WEEKDAYS_LONG[(locale as string)][d.getDay()]}, ${d.getDate()} ${\n      MONTHS[locale][d.getMonth()]\n    } ${d.getFullYear()}`;\n  }\n\n  function formatMonthTitle(d: Date, locale = 'en') {\n    return `${MONTHS[locale][d.getMonth()]} ${d.getFullYear()}`;\n  }\n\n  function formatWeekdayShort(weekday: number, locale: string = 'en'): string {\n    return WEEKDAYS_SHORT[locale][weekday];\n  }\n\n  function formatWeekdayLong(weekday: number, locale: string = 'en') {\n    return WEEKDAYS_SHORT[locale][weekday];\n  }\n\n  function getFirstDayOfWeek(locale: string) {\n    return FIRST_DAY[locale];\n  }\n  \n  function getMonths(locale: string = 'en') {\n    return MONTHS[locale];\n  }\n\n  function parseDate(str: string, format?: string | undefined, locale?: string | undefined): Date {\n    return new Date;\n  }\n\n  const localeUtils: LocaleUtils = {\n    formatDay,\n    formatDate: formatDay,\n    formatMonthTitle,\n    formatWeekdayShort,\n    formatWeekdayLong,\n    getFirstDayOfWeek,\n    getMonths,\n    parseDate\n  };\n\n  /** Them */\n  return {translations, availableLanguages, localeUtils, getTranslations} as const;\n};\n\n/**\n * Little Helper to get the device language or \n * a default one\n */\nexport const getDeviceLanguage = (provided?:string) => {\n  /** Allow me to just use a default one or not at function call */\n  if (provided) {\n    return provided;\n  }\n  /** Get the device language otherwise */\n  const formattedLanguage = (navigator.language || '').split('-');\n\n  return formattedLanguage[0];\n};\n\n/** Get ApplicationName */\nexport const getAppName = (): string => {\n  return process.env.REACT_APP_APP_NAME || '';\n};\n\n/** Get ApplicationVersion */\nexport const getAppVersion = (): string => {\n  return process.env.REACT_APP_APP_VERSION || ''\n}\n\n/** Slugify for internal use, no edge cases */\nexport const slugifyMe = (str: string, separator: string = '-'): string => {\n  return str\n      .toLocaleLowerCase()\n      .replace(/[^a-z0-9 -]/g, \"\")  /** remove invalid chars */\n      .replace(/\\s+/g, separator)   /** collapse whitespace and replace by ${separator} */\n      .replace(/-+/g, \"-\")          /** collapse dashes */\n      .replace(/^-+/, \"\")           /** trim - from start of text */\n      .replace(/-+$/, \"\");\n};\n\n/** \n * Gets you the app name as slugged prefix \n * or prefix it yourself */\nexport const getTextDomain = (str: string, prx: string = slugifyMe(getAppName())): string => {\n  return `@${prx}/${str}`;\n};\n\n/**\n * Generate Palette\n * \n * Little helper to generate palettes of dark and whites\n * \n * @param color the color start point\n * @param direction the direction<'black' | 'white'>\n * @param step how much of it\n * \n * @deprecated\n */\nexport const generatePalette = (color:string, direction:typeof shade | typeof tint, step:number = 0.1): RangeColorsShape => {\n  let palette:RangeColorsShape = {\n    100: '',\n    200: '',\n    300: '',\n    400: '',\n    500: '',\n    600: '',\n    700: '',\n    800: '',\n    900: ''\n  };\n  let key: keyof RangeColorsShape;\n  let count = direction === shade ? 0: Object.keys(palette).length;\n  for (key in palette) {\n    direction === shade ? count++ : count--;\n    if (Object.prototype.hasOwnProperty.call(palette, key)) {\n      palette[key] = (direction(count*step, color) as string);\n    }\n  }\n  return palette;\n}\n\n/**\n * Creates a component passing the base dynamic\n * component. \n */\nexport const createTextComponent: (styleProps: TextPrimitiveProps, displayName?: string) => React.FC<TextPrimitiveProps> = (styleProps, displayName) => {\n  const component: React.FC<TextPrimitiveProps> = props => (\n    <TextPrimitive {...styleProps} {...props}>\n      {props.children}\n    </TextPrimitive>\n  );\n  component.displayName = displayName;\n  return component;\n}\n\n/** Get a theme */\nexport const getTheme = (name: string) => themes[name] || name;\n"],"sourceRoot":""}