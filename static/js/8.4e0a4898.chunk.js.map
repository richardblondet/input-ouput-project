{"version":3,"sources":["components/LanguageSwitcher.tsx","components/ThemeUtils.tsx","routes/dashboard.theme.tsx"],"names":["useIntl","locale","updateLocale","availableLanguages","i18nTools","defaultValue","onChange","e","target","value","map","lang","H1","Typography","H6","Paragraph","Span","ThemePreviewer","Fragment","position","Logo","output","color","py","px","backgroundColor","display","minHeight","style","alignItems","flexWrap","width","maxWidth","alignSelf","fontWeight","type","mr","top","ThemeColorsSquare","styled","Box","ThemeWrapper","capitalize","str","charAt","toLocaleUpperCase","slice","ThemeName","props","name","children","split","join","ml","ThemeOptionComponent","colors","height","borderRadius","overflow","flexDirection","justifyContent","flexGrow","borderRight","borderBottom","H5","Link","ListGroup","ListItem","text","DashboardTheme","useTheme","theme","selectTheme","mx","LanguageSwitcher","minWidth","to","as","Button","availableThemes","themes","onClick","p","borderLeft"],"mappings":"0KAKe,eAAO,IAAD,EACcA,cAAzBC,EADW,EACXA,OAAQC,EADG,EACHA,aACRC,EAAuBC,cAAvBD,mBAER,OACE,cAAC,IAAD,CAAQE,aAAcJ,EAAQK,SAAU,SAACC,GAAD,OAAOL,EAAaK,EAAEC,OAAOC,QAArE,SACGN,EAAmBO,KAAI,SAACC,GACvB,OAAO,wBAAmBF,MAAOE,EAA1B,SAAiCA,GAApBA,U,0dCHpBC,EAA4BC,IAA5BD,GAAIE,EAAwBD,IAAxBC,GAAIC,EAAoBF,IAApBE,UAAWC,EAASH,IAATG,KAIdC,EAAiB,WAC5B,OACE,eAAC,IAAMC,SAAP,WAEE,cAAC,IAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,CAAMC,OAAQ,CAACC,MAAO,eAGxB,cAAC,IAAD,CAAKC,GAAG,OAAOC,GAAG,IAAIC,gBAAgB,oBAAtC,SACE,cAAC,IAAD,CAAKC,QAAQ,OAAOC,UAAU,QAAQC,MAAO,CAAEC,WAAY,SAAUC,SAAU,QAA/E,SACE,eAAC,IAAD,CAAKC,MAAO,CAAE,GAAKC,SAAU,CAAE,EAAG,OAASC,UAAU,SAArD,UACE,eAACrB,EAAD,CAAIsB,WAAW,MAAMZ,MAAM,qBAA3B,wBACa,uBAAM,cAACN,EAAD,CAAMM,MAAM,UAAZ,yBADnB,kBAGA,cAACP,EAAD,CAAWO,MAAM,WAAjB,0QAIA,eAAC,IAAD,CAAQY,WAAY,IAAKX,GAAG,IAAIC,GAAG,IAAIW,KAAK,UAA5C,UACE,cAAC,IAAD,CAAKC,GAAG,UAAUV,QAAQ,SAASP,SAAS,WAAWkB,IAAK,EAA5D,SAA+D,cAAC,IAAD,MADjE,+BAWNC,EAAoBC,YAAOC,IAAPD,CAAH,KAOjBE,EAAeF,YAAOC,IAAPD,CAAH,KAUZG,EAAa,SAACC,GAClB,OAAOA,EAAIC,OAAO,GAAGC,oBAAsBF,EAAIG,MAAM,IAGjDC,EAA4C,SAACC,GAAW,IAEtDC,EADeD,EAAbE,SACcC,MAAM,KAAKzC,IAAIgC,GAAYU,KAAK,KACtD,OACE,cAACtC,EAAD,CAAIuC,GAAG,IAAP,SACE,+BAAOJ,OAKAK,EAAuB,SAACN,GAAkD,IAC7EO,EAAiBP,EAAjBO,OAAQN,EAASD,EAATC,KAChB,OACE,eAACR,EAAD,WACE,cAACH,EAAD,UACE,cAAC,IAAD,CACEP,MAAM,OACNyB,OAAO,OACP5B,MAAO,CAAE6B,aAAc,OAHzB,SAII,eAAC,IAAD,CAAK7B,MAAO,CACV6B,aAAc,MACdC,SAAU,SACV3B,MAAO,OACPyB,OAAQ,OACR9B,QAAS,OACTiC,cAAe,SACfC,eAAgB,iBAPlB,UAUE,eAAC,IAAD,CAAKhC,MAAO,CACVF,QAAS,OACTK,MAAO,OACPyB,OAAQ,MACRK,SAAU,GAJZ,UAOE,cAAC,IAAD,CAAKjC,MAAO,CACVH,gBAAiB8B,EAAM,QACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,+BAGhB,cAAC,IAAD,CAAKnC,MAAO,CACVH,gBAAiB8B,EAAM,UACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,+BAGhB,cAAC,IAAD,CAAKnC,MAAO,CACVH,gBAAiB8B,EAAM,SACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,kCAIlB,eAAC,IAAD,CAAKnC,MAAO,CACVF,QAAS,OACTK,MAAO,OACPyB,OAAQ,MACRK,SAAU,GAJZ,UAOE,cAAC,IAAD,CAAKjC,MAAO,CACVH,gBAAiB8B,EAAM,IACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,+BAGhB,cAAC,IAAD,CAAKnC,MAAO,CACVH,gBAAiB8B,EAAM,MACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,+BAGhB,cAAC,IAAD,CAAKnC,MAAO,CACVH,gBAAiB8B,EAAM,OACvBxB,MAAO,OACPyB,OAAQ,OACRM,YAAa,4BACbC,aAAc,yCAO1B,cAAC,EAAD,UAAYd,Q,6rBCnJVe,EAAmBnD,IAAnBmD,GAAIC,EAAepD,IAAfoD,KAWNC,GAXqBrD,IAATG,KAGKuB,YAAOC,IAAPD,CAAH,KAQFA,YAAO,KAAPA,CAAH,MAWT4B,EAAW5B,YAAO,KAAPA,CAAH,IACV6B,KAyDWC,UA9CQ,WAAO,IAAD,EACIC,cAAvBC,EADmB,EACnBA,MAAOC,EADY,EACZA,YAEf,OACE,eAAC,IAAD,CAAKzC,MAAM,OAAX,UACE,eAAC,IAAD,WACE,cAACiC,EAAD,CAAI1C,MAAM,UAAV,mBAGA,eAAC,IAAD,CAAKI,QAAQ,OAAb,UACE,cAAC,IAAD,CAAK+C,GAAG,IAAR,SACE,cAACC,EAAA,EAAD,MAEF,cAAC,IAAD,CAAKC,SAAS,QAAQF,GAAG,KAAzB,SACE,eAACR,EAAD,CAAMW,GAAG,IAAIC,GAAIC,IAAjB,UACE,cAAC,IAAD,CAAK1C,GAAG,UAAUV,QAAQ,SAASP,SAAS,WAAWkB,IAAK,EAA5D,SAA+D,cAAC,IAAD,MADjE,yBAON,eAAC,IAAD,CAAKX,QAAQ,OAAOE,MAAO,CAAEE,SAAU,OAAQiC,aAAc,qBAA7D,UAEE,cAAC,IAAD,CAAKhC,MAAO,CAAE,EAAG,OAAjB,SACE,cAACmC,EAAD,UACGa,IAAgBrE,KAAI,SAACuC,GAAU,IACtBM,EAAWyB,IAAO/B,GAAlBM,OACR,OACE,cAACY,EAAD,CAEE1C,gBAAkB8C,IAAUtB,EAAO,oBAAsB,OACzDgC,QAAS,kBAAMT,EAAYvB,IAH7B,SAIE,cAAC,EAAD,CAAsBA,KAAMA,EAAMM,OAAQA,KAHrCN,UASf,cAAC,IAAD,CAAKlB,MAAO,CAAE,EAAG,OAASmD,EAAE,IAAItD,MAAO,CAAEuD,WAAY,8BAArD,SACE,cAAC,EAAD","file":"static/js/8.4e0a4898.chunk.js","sourcesContent":["import React from 'react';\nimport { useIntl } from '../store/hooks';\nimport { i18nTools } from '../store/utils';\nimport { Select } from './Utils';\n\nexport default () => {\n  const { locale, updateLocale } = useIntl();\n  const { availableLanguages } = i18nTools();\n\n  return (\n    <Select defaultValue={locale} onChange={(e) => updateLocale(e.target.value)}>\n      {availableLanguages.map((lang) => {\n        return <option key={lang} value={lang}>{lang}</option>;\n      })}\n    </Select>\n  )\n}","import React from 'react';\nimport Logo from './Logo';\nimport { Typography } from './Typography';\nimport { Navbar, Container, Box, Row, Col, Button } from './Utils';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { ThemeColors } from '../store/types';\nimport styled from 'styled-components';\n\n// import DateRenderer from '../components/DateRenderer';\nconst { H1, H6, Paragraph, Span } = Typography;\n\n// const date = new Date();\n\nexport const ThemePreviewer = () => {\n  return (\n    <React.Fragment>\n      {/* Navbar */}\n      <Navbar position=\"static\">\n        <Logo output={{color: 'primary'}} />\n      </Navbar>\n      {/* Hero Section */}\n      <Box py=\"4rem\" px=\"m\" backgroundColor=\"primary-tints.100\">\n        <Box display=\"flex\" minHeight=\"25rem\" style={{ alignItems: 'center', flexWrap: \"wrap\" }}>\n          <Box width={[ 1 ]} maxWidth={[ 1, '50%' ]} alignSelf=\"center\">\n            <H1 fontWeight=\"900\" color=\"primary-shades.900\">\n              This is how<br /><Span color=\"primary\"> this theme</Span> looks like!\n            </H1>\n            <Paragraph color=\"tertiary\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Distinctio, necessitatibus architecto rem repellat, perferendis quisquam asperiores odio itaque numquam totam odit perspiciatis repudiandae corrupti voluptate recusandae excepturi dicta in nobis.\n            </Paragraph>\n          \n            <Button fontWeight={700} py=\"m\" px=\"l\" type=\"primary\">\n              <Box mr=\".375rem\" display=\"inline\" position=\"relative\" top={3}><FiEdit2 /></Box>\n              Call to action\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </React.Fragment>\n  );\n}\n\nconst ThemeColorsSquare = styled(Box)`\n  position: relative;\n  width: 36px;\n  height: 36px;\n  margin: 16px;\n`;\n\nconst ThemeWrapper = styled(Box)`\n  padding: 0px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  \n`;\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toLocaleUpperCase() + str.slice(1);\n}\n\nconst ThemeName: React.FC<{ children: string }> = (props) => {\n  const { children } = props;\n  const name = children.split('-').map(capitalize).join(' ');\n  return (\n    <H6 ml=\"s\">\n      <span>{name}</span>\n    </H6>\n  )\n}\n\nexport const ThemeOptionComponent = (props: { colors: ThemeColors, name: string }) => {\n  const { colors, name } = props;\n  return (\n    <ThemeWrapper>\n      <ThemeColorsSquare>\n        <Box \n          width=\"100%\"\n          height=\"100%\"\n          style={{ borderRadius: '4px' }}>\n            <Box style={{\n              borderRadius: '10%',\n              overflow: 'hidden',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n            }}>\n              {/* Color Row */}\n              <Box style={{\n                display: 'flex',\n                width: '100%',\n                height: '1px',\n                flexGrow: 1,\n              }}>\n                {/* Primary Color */}\n                <Box style={{\n                  backgroundColor: colors['primary'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n                {/* Secundary Color */}\n                <Box style={{\n                  backgroundColor: colors['secondary'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n                {/* Terciary Color */}\n                <Box style={{\n                  backgroundColor: colors['tertiary'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n              </Box>\n              {/* Color Row */}\n              <Box style={{\n                display: 'flex',\n                width: '100%',\n                height: '1px',\n                flexGrow: 1,\n              }}>\n                {/* Red Color */}\n                <Box style={{\n                  backgroundColor: colors['red'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n                {/* Green Color */}\n                <Box style={{\n                  backgroundColor: colors['green'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n                {/* yellow Color */}\n                <Box style={{\n                  backgroundColor: colors['yellow'],\n                  width: '100%',\n                  height: '100%',\n                  borderRight: '1px inset rgba(0,0,0,0.1)',\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                }} />\n              </Box>\n            </Box>\n        </Box>\n      </ThemeColorsSquare>\n        \n      <ThemeName>{name}</ThemeName>\n    </ThemeWrapper>\n  )\n}","import React from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { color, ColorProps } from 'styled-system';\nimport LanguageSwitcher from '../components/LanguageSwitcher';\nimport { ThemePreviewer, ThemeOptionComponent } from '../components/ThemeUtils';\nimport { Typography } from '../components/Typography';\nimport { Box, Button, ButtonPrimitive, DashboardNavbar, text, TextPrimitive } from '../components/Utils';\nimport { useTheme } from '../store/hooks';\nimport { TextPrimitiveProps } from '../store/types';\nimport themes, { availableThemes } from '../themes';\n\nconst { H5, Link, Span } = Typography;\n\n// const Nav = styled(Box)``;\nconst ThemeComponent = styled(Box)`\n  max-width: 7rem;\n  padding: 8px;\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n  border-radius: 4px;\n  border: solid 1px #fefefe;\n`;\n\nconst ListGroup = styled('ul')`\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0;\n  border-radius: .25rem;\n\n  li:last-child {\n    border-bottom: none;\n  }\n`;\nconst ListItem = styled('li')<TextPrimitiveProps>`\n  ${text}\n  position: relative;\n  display: block;\n  cursor: pointer;\n  border-bottom: 1px solid #F6F9FC;\n  \n  &:hover {\n    background-color: #f6f6f6;\n  }\n`;\n\nconst DashboardTheme = () => {\n  const { theme, selectTheme } = useTheme();\n\n  return (\n    <Box width=\"100%\">\n      <DashboardNavbar>\n        <H5 color=\"#959599\">\n          Theme\n        </H5>\n        <Box display=\"flex\">\n          <Box mx=\"s\">\n            <LanguageSwitcher />\n          </Box>\n          <Box minWidth=\"150px\" mx=\"xs\">\n            <Link to=\"/\" as={Button}>\n              <Box mr=\".375rem\" display=\"inline\" position=\"relative\" top={3}><FiPower /></Box>\n              Output Page\n            </Link>\n          </Box>\n        </Box>\n      </DashboardNavbar>\n      <Box display=\"flex\" style={{ flexWrap: \"wrap\", borderBottom: 'solid 1px #efefef' }} >\n        {/* Theme list column */}\n        <Box width={[ 1, '25%' ]}>\n          <ListGroup>\n            {availableThemes.map((name) => {\n              const { colors } = themes[name];\n              return (\n                <ListItem  \n                  key={name} \n                  backgroundColor={ theme === name ? 'primary-lightened' : '#fff' }\n                  onClick={() => selectTheme(name)}>\n                  <ThemeOptionComponent name={name} colors={colors} />\n                </ListItem>\n              )\n            })}\n          </ListGroup>\n        </Box>\n        <Box width={[ 1, '75%' ]} p=\"l\" style={{ borderLeft: '1px solid rgba(0,0,0,.125)' }}>\n          <ThemePreviewer />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default DashboardTheme;\n"],"sourceRoot":""}